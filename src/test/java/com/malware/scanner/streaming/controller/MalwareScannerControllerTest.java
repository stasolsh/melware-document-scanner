package com.malware.scanner.streaming.controller;

import com.malware.scanner.streaming.model.CheckEvent;
import com.malware.scanner.streaming.model.CheckResultEvent;
import com.malware.scanner.streaming.model.FileType;
import com.malware.scanner.streaming.service.MalwareScannerService;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.json.AutoConfigureJsonTesters;
import org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTest;
import org.springframework.boot.test.json.JacksonTester;
import org.springframework.boot.test.mock.mockito.MockBean;
import org.springframework.test.context.junit.jupiter.SpringExtension;
import org.springframework.test.web.servlet.MockMvc;
import org.springframework.test.web.servlet.MvcResult;
import org.springframework.test.web.servlet.request.MockMvcRequestBuilders;

import java.util.List;

import static com.malware.scanner.streaming.model.CheckResultEvent.StateEnum.IGNORED;
import static com.malware.scanner.streaming.model.CheckResultEvent.StateEnum.SUSPICIOUS;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.mockito.ArgumentMatchers.any;
import static org.mockito.Mockito.when;
import static org.springframework.http.MediaType.APPLICATION_JSON;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;

@ExtendWith(SpringExtension.class)
@WebMvcTest(MalwareScannerController.class)
@AutoConfigureJsonTesters
public class MalwareScannerControllerTest {
    private static final String API_SCANNER = "/api/v1/malwareScanner";
    private static final CheckEvent CHECK_EVENT = new CheckEvent().setFileType(FileType.PDF).setUrl("https://www.baeldung.com/spring-data-exists-query");
    private static final List<CheckResultEvent> CHECK_RESULT_EVENTS = List.of(
            new CheckResultEvent().setName("IBAN_CHECK").setState(SUSPICIOUS).setDetails("There are blacklisted IBAN's"),
            new CheckResultEvent().setName("MAGIC_BYTE_CHECK").setState(IGNORED).setDetails("Not Implemented Yet!")
    );
    @Autowired
    private MockMvc mockMvc;

    @MockBean
    private MalwareScannerService malwareScannerService;

    @Autowired
    private JacksonTester<CheckEvent> checkEventJackson;
    @Autowired
    private JacksonTester<List<CheckResultEvent>> checkEventJacksonList;


    @Test
    public void shouldVerifyMalwareScannerEndpoint() throws Exception {
        when(malwareScannerService.performScan(any(CheckEvent.class))).thenReturn(CHECK_RESULT_EVENTS);

        MvcResult mvcResult = mockMvc.perform(
                        MockMvcRequestBuilders.post(API_SCANNER)
                                .content(checkEventJackson.write(CHECK_EVENT).getJson())
                                .contentType(APPLICATION_JSON)
                                .accept(APPLICATION_JSON))
                .andExpect(status().isOk())
                .andReturn();

        List<CheckResultEvent> resultEvents = checkEventJacksonList.parseObject(mvcResult.getResponse().getContentAsString());

        assertEquals(CHECK_RESULT_EVENTS.toString(), resultEvents.toString());
    }
}
